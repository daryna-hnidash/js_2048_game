{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nconst gameFieldElement = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.button');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nlet gameStarted = false;\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartBtn.addEventListener('click', () => {\n  if (gameStarted) {\n    while (gameFieldElement.firstChild) {\n      gameFieldElement.removeChild(gameFieldElement.firstChild);\n    }\n\n    gameField = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n\n  messageStart.classList.add('hidden');\n  setGame();\n  gameStarted = true;\n\n  startBtn.classList.remove('start');\n  startBtn.classList.add('restart');\n  startBtn.textContent = 'Restart';\n  score = 0;\n  gameScore.innerText = score;\n});\n\nconst setGame = () => {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.createElement('div');\n\n      cell.id = `${r}-${c}`;\n\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n      gameFieldElement.append(cell);\n    }\n  }\n\n  addTile();\n  addTile();\n};\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gameField[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addTile() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n    const num = Math.random() > 0.1 ? 2 : 4;\n\n    if (gameField[r][c] === 0) {\n      gameField[r][c] = num;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = num.toString();\n      tile.classList.add('field-cell--' + num);\n      found = true;\n    }\n  }\n}\n\nfunction isWon() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gameField[r][c] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isLost() {\n  if (hasEmptyTile()) {\n    return false;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (gameField[r][c] === gameField[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < rows - 1; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gameField[r][c] === gameField[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n  }\n\n  if (e.code === 'ArrowRight') {\n    slideRight();\n  }\n\n  if (e.code === 'ArrowUp') {\n    slideUp();\n  }\n\n  if (e.code === 'ArrowDown') {\n    slideDown();\n  }\n\n  if (isWon()) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (isLost()) {\n    messageLose.classList.remove('hidden');\n  }\n});\n\nfunction updateHandler(copyField) {\n  if (copyField.toString() !== gameField.toString()) {\n    gameField = JSON.parse(JSON.stringify(copyField));\n\n    updateGameField();\n    addTile();\n  }\n}\n\nfunction updateGameField() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = gameField[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num;\n    cell.classList.add(`field-cell--${num}`);\n  }\n}\n\nfunction slide(row) {\n  let slidedRow = row.filter(num => num !== 0);\n\n  for (let c = 0; c < columns - 1; c++) {\n    if (slidedRow[c] === slidedRow[c + 1]) {\n      slidedRow[c] *= 2;\n      slidedRow[c + 1] = 0;\n      score += +slidedRow[c] | 0;\n      gameScore.innerText = score;\n    }\n  }\n  slidedRow = slidedRow.filter(num => num !== 0 && !isNaN(num));\n\n  while (slidedRow.length < columns) {\n    slidedRow.push(0);\n  };\n\n  return slidedRow;\n}\n\nfunction slideLeft() {\n  const fieldCopy = JSON.parse(JSON.stringify(gameField));\n\n  for (let r = 0; r < rows; r++) {\n    let row = fieldCopy[r];\n\n    row = slide(row);\n    fieldCopy[r] = row;\n  };\n\n  updateHandler(fieldCopy);\n};\n\nfunction slideRight() {\n  const fieldCopy = JSON.parse(JSON.stringify(gameField));\n\n  for (let r = 0; r < rows; r++) {\n    let row = fieldCopy[r];\n\n    row = row.reverse();\n    row = slide(row);\n\n    const newRow = row.reverse();\n\n    fieldCopy[r] = newRow;\n  };\n\n  updateHandler(fieldCopy);\n};\n\nfunction slideUp() {\n  const fieldCopy = JSON.parse(JSON.stringify(gameField));\n\n  for (let c = 0; c < rows; c++) {\n    let row = [\n      fieldCopy[0][c],\n      fieldCopy[1][c],\n      fieldCopy[2][c],\n      fieldCopy[3][c],\n    ];\n\n    row = slide(row);\n\n    for (let index = 0; index < rows; index++) {\n      fieldCopy[index][c] = row[index];\n    }\n  };\n\n  updateHandler(fieldCopy);\n};\n\nfunction slideDown() {\n  const fieldCopy = JSON.parse(JSON.stringify(gameField));\n\n  for (let c = 0; c < rows; c++) {\n    let row = [\n      fieldCopy[0][c],\n      fieldCopy[1][c],\n      fieldCopy[2][c],\n      fieldCopy[3][c],\n    ];\n\n    row = slide(row.reverse());\n    row = row.reverse();\n\n    for (let index = 0; index < rows; index++) {\n      fieldCopy[index][c] = row[index];\n    }\n  };\n\n  updateHandler(fieldCopy);\n};\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}